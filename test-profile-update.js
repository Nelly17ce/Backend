// Script de test pour v√©rifier la mise √† jour du profil docteur
import axios from 'axios';

const testProfileUpdate = async () => {
    try {
        console.log('üß™ Test de mise √† jour du profil docteur...\n');

        // 1. Connexion du docteur
        console.log('1. Connexion du docteur...');
        const loginResponse = await axios.post('http://localhost:5000/api/doctor/login', {
            email: 'davy@fasolink.com',
            password: 'password123'
        });

        if (!loginResponse.data.success) {
            console.error('‚ùå √âchec de la connexion:', loginResponse.data.message);
            return;
        }

        const token = loginResponse.data.token;
        console.log('‚úÖ Connexion r√©ussie');

        // 2. R√©cup√©ration du profil actuel
        console.log('\n2. R√©cup√©ration du profil actuel...');
        const profileResponse = await axios.get('http://localhost:5000/api/doctor/profile', {
            headers: { dToken: token }
        });

        if (!profileResponse.data.success) {
            console.error('‚ùå √âchec de la r√©cup√©ration du profil:', profileResponse.data.message);
            return;
        }

        console.log('‚úÖ Profil r√©cup√©r√©:', profileResponse.data.profileData);

        // 3. Mise √† jour du profil
        console.log('\n3. Mise √† jour du profil...');
        const updateData = {
            name: 'Dr. Davy Modifi√©',
            phone: '+226 70 12 34 56',
            speciality: 'M√©decin G√©n√©raliste Modifi√©',
            experience: '6 ans',
            degree: 'Doctorat en m√©decine modifi√©',
            about: 'Dr. Davy est un m√©decin tr√®s exp√©riment√© avec une passion pour les soins de qualit√©.',
            education: 'Universit√© de Ouagadougou - Facult√© de m√©decine (modifi√©)',
            certifications: 'Certification en m√©decine g√©n√©rale, Formation continue en cardiologie (modifi√©)',
            languages: 'Fran√ßais, Anglais, Moor√©, Dioula'
        };

        const updateResponse = await axios.post('http://localhost:5000/api/doctor/update-profile', updateData, {
            headers: { dToken: token }
        });

        if (!updateResponse.data.success) {
            console.error('‚ùå √âchec de la mise √† jour:', updateResponse.data.message);
            return;
        }

        console.log('‚úÖ Profil mis √† jour:', updateResponse.data.message);

        // 4. V√©rification de la mise √† jour
        console.log('\n4. V√©rification de la mise √† jour...');
        const verifyResponse = await axios.get('http://localhost:5000/api/doctor/profile', {
            headers: { dToken: token }
        });

        if (!verifyResponse.data.success) {
            console.error('‚ùå √âchec de la v√©rification:', verifyResponse.data.message);
            return;
        }

        console.log('‚úÖ Profil v√©rifi√© apr√®s mise √† jour:');
        console.log('   - Nom:', verifyResponse.data.profileData.name);
        console.log('   - T√©l√©phone:', verifyResponse.data.profileData.phone);
        console.log('   - Sp√©cialit√©:', verifyResponse.data.profileData.speciality);
        console.log('   - Exp√©rience:', verifyResponse.data.profileData.experience);
        console.log('   - Dipl√¥me:', verifyResponse.data.profileData.degree);
        console.log('   - √Ä propos:', verifyResponse.data.profileData.about);
        console.log('   - Formation:', verifyResponse.data.profileData.education);
        console.log('   - Certifications:', verifyResponse.data.profileData.certifications);
        console.log('   - Langues:', verifyResponse.data.profileData.languages);

        console.log('\nüéâ Test de mise √† jour du profil r√©ussi !');

    } catch (error) {
        console.error('‚ùå Erreur lors du test:', error.response?.data || error.message);
    }
};

testProfileUpdate();
